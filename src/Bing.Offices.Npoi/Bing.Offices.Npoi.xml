<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Offices.Npoi</name>
    </assembly>
    <members>
        <member name="T:Bing.Offices.Npoi.Conversions.CellValueConverter">
            <summary>
            单元格值转换器
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Conversions.CellValueConverter.GetStringValue(System.Object)">
            <summary>
            获取单元格字符串值
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="T:Bing.Offices.Npoi.ExcelHelper">
            <summary>
            Excel 操作辅助类
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.ExcelHelper.AppVersion">
            <summary>
            应用程序版本
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.ValidateExcelFilePath(System.String,System.String@,System.Boolean)">
            <summary>
            校验Excel文件路径
            </summary>
            <param name="excelPath">Excel文件路径</param>
            <param name="msg">错误消息</param>
            <param name="isExport">是否导出</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.PrepareWorkbook(System.String)">
            <summary>
            准备工作簿
            </summary>
            <param name="excelPath">Excel文件路径</param>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.PrepareWorkbook(System.String,Bing.Offices.Settings.ExcelSetting)">
            <summary>
            准备工作簿
            </summary>
            <param name="excelPath">Excel文件路径</param>
            <param name="excelSetting">Excel设置</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.PrepareWorkbook(Bing.Offices.ExcelFormat,Bing.Offices.Settings.ExcelSetting)">
            <summary>
            准备工作簿
            </summary>
            <param name="format">Excel格式</param>
            <param name="excelSetting">Excel设置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.PrepareWorkbook">
            <summary>
            准备工作簿
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.PrepareWorkbook(Bing.Offices.ExcelFormat)">
            <summary>
            准备工作簿
            </summary>
            <param name="format">Excel格式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.PrepareWorkbook(System.Boolean)">
            <summary>
            准备工作簿
            </summary>
            <param name="isXlsx">是否Xlsx格式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.ExcelHelper.PrepareWorkbook(System.Boolean,Bing.Offices.Settings.ExcelSetting)">
            <summary>
            准备工作簿
            </summary>
            <param name="isXlsx">是否Xlsx格式</param>
            <param name="excelSetting">Excel设置</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Exports.ExcelExportProvider">
            <summary>
            Excel导出提供程序
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.Export``1(Bing.Offices.Exports.IExportOptions{``0})">
            <summary>
            导出
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="options">导出选项配置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.BuildDynamicHeader(System.Collections.Generic.IDictionary{System.String,Bing.Offices.Settings.PropertySetting},System.Collections.Generic.IList{System.String})">
            <summary>
            构建动态表头
            </summary>
            <param name="headerDict">表头映射字典</param>
            <param name="dynamicColumns">动态列</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.CustomHeaderRow``1(NPOI.SS.UserModel.ISheet,Bing.Offices.Exports.IExportOptions{``0})">
            <summary>
            自定义表头行
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sheet"></param>
            <param name="options"></param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.CellRangeAddress``1(NPOI.SS.UserModel.ISheet,Bing.Offices.Exports.IExportOptions{``0})">
            <summary>
            合并单元格
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sheet"></param>
            <param name="options"></param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.HandleHeader``1(NPOI.SS.UserModel.ISheet,Bing.Offices.Exports.IExportOptions{``0},System.Collections.Generic.IDictionary{System.String,Bing.Offices.Settings.PropertySetting})">
            <summary>
            处理表头
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sheet">NPOI工作表</param>
            <param name="options">导出选项配置</param>
            <param name="headerDict">表头映射字典</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.HandleBody``1(NPOI.SS.UserModel.ISheet,System.Int32,System.Collections.Generic.IList{``0},System.Collections.Generic.IDictionary{System.String,Bing.Offices.Settings.PropertySetting})">
            <summary>
            处理正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sheet">NPOI工作表</param>
            <param name="dataRowStartIndex">数据行起始索引</param>
            <param name="data">数据集</param>
            <param name="headerDict">表头映射字典</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.HandleHeader``1(System.Byte[],Bing.Offices.Exports.IExportOptions{``0},Bing.Offices.Decorators.IDecoratorContext)">
            <summary>
            处理表头
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbookBytes">工作簿流</param>
            <param name="options">导出选项配置</param>
            <param name="context">装饰器上下文</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.MergeCells``1(System.Byte[],Bing.Offices.Exports.IExportOptions{``0},Bing.Offices.Decorators.IDecoratorContext)">
            <summary>
            合并单元格
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbookBytes">工作簿流</param>
            <param name="options">导出选项配置</param>
            <param name="context">装饰器上下文</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.MergeCells``1(NPOI.SS.UserModel.ISheet,System.Int32,Bing.Offices.Exports.IExportOptions{``0})">
            <summary>
            合并单元格
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sheet">工作表</param>
            <param name="columnIndex">列索引</param>
            <param name="options">导出选项配置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Exports.ExcelExportProvider.WarpText``1(System.Byte[],Bing.Offices.Exports.IExportOptions{``0},Bing.Offices.Decorators.IDecoratorContext)">
            <summary>
            自动换行
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbookBytes">工作簿流</param>
            <param name="options">导出选项配置</param>
            <param name="context">装饰器上下文</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.CellExtensions">
            <summary>
            NPOI单元格(<see cref="T:NPOI.SS.UserModel.ICell"/>) 扩展
            </summary>
            <summary>
            NPOI单元格(<see cref="T:NPOI.SS.UserModel.ICell"/>) 扩展
            </summary>
            <summary>
            NPOI单元格(<see cref="T:NPOI.SS.UserModel.ICell"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.AddConditionalFormattingRules(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.IConditionalFormattingRule[])">
            <summary>
            添加条件格式规则
            </summary>
            <param name="cell">单元格</param>
            <param name="cfrs">条件格式规则</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.GetConditionalFormattingRules(NPOI.SS.UserModel.ICell)">
            <summary>
            获取条件格式规则
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.ExistConditionalFormatting(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.IConditionalFormatting)">
            <summary>
            判断单元格是否存在条件格式
            </summary>
            <param name="cell">单元格</param>
            <param name="cf">条件格式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.GetStringValue(NPOI.SS.UserModel.ICell)">
            <summary>
            获取单元格的字符串值
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.SetValue(NPOI.SS.UserModel.ICell,System.Object,System.Nullable{System.Byte})">
            <summary>
            设置单元值
            </summary>
            <param name="cell">单元格</param>
            <param name="value">值</param>
            <param name="scale">保留小数位数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.GetSpan(NPOI.SS.UserModel.ICell)">
            <summary>
            获取单元格跨度信息
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.SetCellValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>
            设置单元格值
            </summary>
            <param name="cell">单元格</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.SetCellValue(NPOI.SS.UserModel.ICell,System.Object,System.String)">
            <summary>
            设置单元格值
            </summary>
            <param name="cell">单元格</param>
            <param name="value">值</param>
            <param name="formatter">格式化字符串</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.Merge(NPOI.SS.UserModel.ICell,NPOI.SS.UserModel.ICell,System.Boolean)">
            <summary>
            合并单元格
            </summary>
            <param name="fromCell">起始单元格</param>
            <param name="toCell">终止单元格</param>
            <param name="isExpand">扩充模式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellExtensions.GetRangeInfo(NPOI.SS.UserModel.ICell)">
            <summary>
            获取合并区域信息
            </summary>
            <param name="cell">NPOI单元格</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.CellStyleExtensions">
            <summary>
            单元格样式(<see cref="T:NPOI.SS.UserModel.ICellStyle"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetDataFormat(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置数据格式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="dataFormat">数据格式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetHorizontalAlignment(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.HorizontalAlignment)">
            <summary>
            设置水平对齐
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="horizontalAlignment">水平对齐</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetVerticalAlignment(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.VerticalAlignment)">
            <summary>
            设置垂直对齐
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="verticalAlignment">垂直对齐</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFillForegroundColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置填充前景颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="fillForegroundColor">填充前景颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFillBackgroundColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置填充背景颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="backgroundColor">填充背景颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFillPattern(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.FillPattern)">
            <summary>
            设置填充模式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="fillPattern">填充图案</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderTop(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置上边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderRight(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置右边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderBottom(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置下边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderLeft(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置左边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorder(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.BorderStyle)">
            <summary>
            设置边框样式
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderStyle">边框样式</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderTopColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置上边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderRightColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置右边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderBottomColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置下边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderLeftColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置左边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetBorderColor(NPOI.SS.UserModel.ICellStyle,System.Int16)">
            <summary>
            设置边框颜色
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="borderColor">边框颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.CellStyleExtensions.SetFont(NPOI.SS.UserModel.ICellStyle,NPOI.SS.UserModel.IWorkbook,System.Action{NPOI.SS.UserModel.IFont})">
            <summary>
            设置字体
            </summary>
            <param name="cellStyle">单元格样式</param>
            <param name="workbook">工作簿</param>
            <param name="action">字体</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.Extensions">
            <summary>
            服务扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.Extensions.AddNpoi(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册Npoi操作
            </summary>
            <param name="services">服务集合</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.FontExtensions">
            <summary>
            字体(<see cref="T:NPOI.SS.UserModel.IFont"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.FontExtensions.SetFontHeightInPoints(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置字体大小
            </summary>
            <param name="font">字体</param>
            <param name="fontSize">字体大小</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.FontExtensions.SetColor(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置字体颜色
            </summary>
            <param name="font">字体</param>
            <param name="color">颜色</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.FontExtensions.SetBoldWeight(NPOI.SS.UserModel.IFont,System.Int16)">
            <summary>
            设置粗体
            </summary>
            <param name="font">字体</param>
            <param name="boldWeight">粗体大小</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.FontExtensions.DefaultFont(NPOI.SS.UserModel.IFont)">
            <summary>
            默认字体
            </summary>
            <param name="font">字体</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.InternalExtensions">
            <summary>
            内部扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.InternalExtensions.GetStringValue``1(``0,System.String,System.String)">
            <summary>
            获取字符串值
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="dto">数据传输对象</param>
            <param name="propertyName">属性名</param>
            <param name="format">格式化字符串</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.InternalExtensions.GetValue``1(``0,System.String)">
            <summary>
            获取值
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="dto">数据传输对象</param>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.InternalExtensions.Format(System.Object,System.String,System.IFormatProvider)">
            <summary>
            格式化
            </summary>
            <param name="value">值</param>
            <param name="format">格式化字符串</param>
            <param name="formatProvider">格式化提供程序</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.InternalExtensions.GetExtendDictionary``1(``0,System.String)">
            <summary>
            获取扩展字典
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="dto">数据传输对象</param>
            <param name="propertyName">属性名</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.RowExtensions">
            <summary>
            行(<see cref="T:NPOI.SS.UserModel.IRow"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.GetOrCreateCell(NPOI.SS.UserModel.IRow,System.Int32)">
            <summary>
            获取或创建单元格
            </summary>
            <param name="row">行</param>
            <param name="cellIndex">单元格索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.CreateCell(NPOI.SS.UserModel.IRow,System.Int32,System.Action{NPOI.SS.UserModel.ICell})">
            <summary>
            创建单元格并进行操作
            </summary>
            <param name="row">行</param>
            <param name="cellIndex">单元格索引</param>
            <param name="action">单元格操作</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.ClearContent(NPOI.SS.UserModel.IRow)">
            <summary>
            清空内容
            </summary>
            <param name="row">NPOI单元行</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.IsEmptyRow(NPOI.SS.UserModel.IRow)">
            <summary>
            是否空行
            </summary>
            <param name="row">行</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.RowExtensions.Value``1(NPOI.SS.UserModel.IRow,System.Int32,``0,NPOI.SS.UserModel.ICellStyle)">
            <summary>
            设置单元格值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="row">行</param>
            <param name="column">单元格索引</param>
            <param name="value">值</param>
            <param name="style">行样式</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.SheetExtensions">
            <summary>
            工作表(<see cref="T:NPOI.SS.UserModel.ISheet"/> ) 扩展
            </summary>
            <summary>
            NPOI工作表(<see cref="T:NPOI.SS.UserModel.ISheet"/>) 扩展
            </summary>
            <summary>
            NPOI工作表(<see cref="T:NPOI.SS.UserModel.ISheet"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllMergedRegions(NPOI.SS.UserModel.ISheet)">
            <summary>
            获取所有合并单元格区域。格式：(x1,y1,x2,y2)
            </summary>
            <param name="sheet">工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.DeleteRows(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            删除行。
            解决因为shiftRows上移删除行而造成的格式错乱问题
            </summary>
            <param name="sheet">工作表</param>
            <param name="deleteRowStartIndex">删除行起始索引。从0开始</param>
            <param name="count">删除行数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetHasDataRowNum(NPOI.SS.UserModel.ISheet)">
            <summary>
            获取有数据（非空行）的最后一行的行数。如果sheet中一行数据都没有则返回-1，只有第一行有数据则返回0，最后有数据的行是第n行则返回n-1。
            </summary>
            <param name="sheet">工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.AddRow``1(NPOI.SS.UserModel.ISheet,System.Collections.Generic.IEnumerable{``0},System.Action{NPOI.SS.UserModel.IRow,``0})">
            <summary>
            添加行
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sheet">工作表</param>
            <param name="data">数据</param>
            <param name="action">操作</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.InsertRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            插入行
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="rowIndex">行索引</param>
            <returns>NPOI单元行</returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.InsertRows(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            批量插入行
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="rowIndex">行索引</param>
            <param name="rowsCount">插入行数量</param>
            <returns>NPOI单元行数组</returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveRow(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            移除行
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveRows(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            移除行
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.IsInternalOrIntersect(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            判断指定区域是否在内部或交叉
            </summary>
            <param name="rangeMinRow">区域最小行索引</param>
            <param name="rangeMaxRow">区域最大行索引</param>
            <param name="rangeMinCol">区域最小列索引</param>
            <param name="rangeMaxCol">区域最大列索引</param>
            <param name="targetMinRow">目标最小行索引</param>
            <param name="targetMaxRow">目标最大行索引</param>
            <param name="targetMinCol">目标最小列索引</param>
            <param name="targetMaxCol">目标最大列索引</param>
            <param name="onlyInternal">仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.AddMergedRegion(NPOI.SS.UserModel.ISheet,Bing.Offices.Metadata.MergedRegionInfo)">
            <summary>
            添加合并区域
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="regionInfo">合并区域信息</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetMergedRegionInfos(NPOI.SS.UserModel.ISheet)">
            <summary>
            获取工作表中包含合并区域的信息列表
            </summary>
            <param name="sheet">NPOI工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetMergedRegionInfos(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            获取工作表中指定区域包含合并区域的信息列表
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveMergedRegions(NPOI.SS.UserModel.ISheet)">
            <summary>
            移除工作表中所有的合并区域
            </summary>
            <param name="sheet">NPOI工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            移除工作表中指定区域内的合并区域
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            移动工作表中所有合并区域
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="moveRowCount">移动行数</param>
            <param name="moveColCount">移动列数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MoveMergedRegions(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            移动工作表指定区域内的合并区域
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="moveRowCount">移动行数</param>
            <param name="moveColCount">移动列数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.AddPicture(NPOI.SS.UserModel.ISheet,Bing.Offices.Metadata.PictureInfo)">
            <summary>
            添加图片
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="picInfo">图片信息</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.SS.UserModel.ISheet)">
            <summary>
            获取工作表中包含图片的信息列表
            </summary>
            <param name="sheet">NPOI工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            获取工作表中指定区域包含图片的信息列表
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.HSSF.UserModel.HSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            获取所有图片信息列表
            </summary>
            <param name="sheet">工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.GetAllPictureInfos(NPOI.XSSF.UserModel.XSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            获取所有图片信息列表
            </summary>
            <param name="sheet">工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.SS.UserModel.ISheet)">
            <summary>
            移除工作表中所有的图片
            </summary>
            <param name="sheet">NPOI工作表</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            移除工作表中指定区域的图片
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.HSSF.UserModel.HSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            移除图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.RemovePictures(NPOI.XSSF.UserModel.XSSFSheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            移除图片
            </summary>
            <param name="sheet">工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MovePictures(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            移动工作表中所有的图片
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="moveRowCount">移动行数</param>
            <param name="moveColCount">移动列数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.MovePictures(NPOI.SS.UserModel.ISheet,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Int32,System.Int32)">
            <summary>
            移动工作表中指定区域的图片
            </summary>
            <param name="sheet">NPOI工作表</param>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="onlyInternal">是否仅在内部</param>
            <param name="moveRowCount">移动行数</param>
            <param name="moveColCount">移动列数</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.TryAddPicture(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32,NPOI.SS.UserModel.IPictureData)">
            <summary>
            尝试添加图片到工作表当中
            </summary>
            <param name="sheet">工作表</param>
            <param name="row">行索引</param>
            <param name="col">列索引</param>
            <param name="pictureData">图片数据</param>
            <returns>添加成功则返回true</returns>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.SheetExtensions.TryAddPicture(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32,System.Byte[],NPOI.SS.UserModel.PictureType)">
            <summary>
            尝试添加图片到工作表当中
            </summary>
            <param name="sheet">工作表</param>
            <param name="row">行索引</param>
            <param name="col">列索引</param>
            <param name="pictureBytes">图片数据</param>
            <param name="pictureType">图片类型</param>
            <returns>添加成功则返回true</returns>
        </member>
        <member name="T:Bing.Offices.Npoi.Extensions.WorkbookExtensions">
            <summary>
            NPOI工作簿(<see cref="T:NPOI.SS.UserModel.IWorkbook"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.SaveToBuffer(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            将工作簿转换成字节数组
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.ToWorkbook(System.Byte[])">
            <summary>
            转换为工作簿
            </summary>
            <param name="workbookBytes">工作簿字节数组</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.GetExcelFormat(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取Excel格式类型
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.GetSheets(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            获取工作表集合
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.SetAllSheetAutoCompute(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            设置所有工作表自动计算
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.AddSheet(NPOI.SS.UserModel.IWorkbook,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            添加工作表
            </summary>
            <param name="workbook">工作簿</param>
            <param name="name">工作表名称</param>
            <param name="heads">表头</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.DefaultHeadStyle(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            默认表头样式
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Extensions.WorkbookExtensions.DefaultBodyStyle(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            默认正文样式
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Factories.ExportMappingFactory">
            <summary>
            导出映射工厂
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Factories.ExportMappingFactory.MappingDict">
            <summary>
            映射字典
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Factories.ExportMappingFactory.CreateInstance(System.Type)">
            <summary>
            创建映射字典实例
            </summary>
            <param name="type">导出类型</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Factories.ExportMappingFactory.HasIgnore(System.Reflection.PropertyInfo)">
            <summary>
            是否有忽略属性
            </summary>
            <param name="propertyInfo">属性信息</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Imports.ExcelImportProvider">
            <summary>
            Excel导入提供程序
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Imports.ExcelImportProvider.Table">
            <summary>
            哈希表
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Imports.ExcelImportProvider.TableDynamicCell">
            <summary>
            哈希表动态单元格
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Imports.ExcelImportProvider._converter">
            <summary>
            单元格值转换器
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.#ctor(Bing.Offices.Conversions.ICellValueConverter)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Imports.ExcelImportProvider"/>类型的实例
            </summary>
            <param name="converter">单元格值转换器</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.Convert``1(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            转换
            </summary>
            <typeparam name="TTemplate">导入模板类型</typeparam>
            <param name="fileUrl">文件地址</param>
            <param name="sheetIndex">工作表索引</param>
            <param name="headerRowIndex">标题行索引</param>
            <param name="dataRowStartIndex">数据行起始索引</param>
            <param name="multiSheet">是否支持多工作表模式</param>
            <param name="maxColumnLength">最大列长度</param>
            <param name="enabledEmptyLine">启用空行模式。启用时，行内遇到空行将抛出异常错误信息</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.Convert``1(Bing.Offices.Imports.IImportOptions)">
            <summary>
            转换
            </summary>
            <typeparam name="TTemplate">导入模板类型</typeparam>
            <param name="options">导入选项配置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.CleanHeaderRowCache(Bing.Offices.Imports.IImportOptions)">
            <summary>
            清理缓存
            </summary>
            <param name="options">导入选项配置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.BuildSheet``1(Bing.Offices.Metadata.Excels.IWorkbook,NPOI.SS.UserModel.IWorkbook,Bing.Offices.Imports.IImportOptions)">
            <summary>
            构建工作表
            </summary>
            <typeparam name="TTemplate">导入模板类型</typeparam>
            <param name="workbook">工作簿</param>
            <param name="innerWorkbook">内部工作簿</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.GetWorkbook(System.String)">
            <summary>
            获取工作簿
            </summary>
            <param name="fileUrl">文件地址</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.GetSheet(NPOI.SS.UserModel.IWorkbook,System.Int32)">
            <summary>
            获取工作表
            </summary>
            <param name="workbook">工作簿</param>
            <param name="sheetIndex">工作表索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.HandleHeader(Bing.Offices.Metadata.Excels.IWorkSheet,NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            处理表头
            </summary>
            <param name="sheet">工作表</param>
            <param name="innerSheet">NPOI工作表</param>
            <param name="headerRowIndex">标题行索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.VerifyHeader``1(Bing.Offices.Metadata.Excels.IWorkSheet,Bing.Offices.Imports.IImportOptions)">
            <summary>
            验证表头
            </summary>
            <param name="sheet">工作表</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.HandleBody``1(Bing.Offices.Metadata.Excels.IWorkSheet,NPOI.SS.UserModel.ISheet,Bing.Offices.Imports.IImportOptions)">
            <summary>
            处理正文
            </summary>
            <param name="sheet">工作表</param>
            <param name="innerSheet">NPOI工作表</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.CheckIgnoreEmptyLine(Bing.Offices.Imports.IImportOptions,System.Boolean)">
            <summary>
            忽略空行后数据
            </summary>
            <param name="options">导入选项配置</param>
            <param name="isEmptyRow">是否空行</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.CheckEmptyLine(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            检查空行
            </summary>
            <param name="isEmptyRow">是否空行</param>
            <param name="enabledEmptyLine">启用空行模式。启用时，行内遇到空行将抛出异常错误信息</param>
            <param name="rowIndex">行号</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.Convert``1(NPOI.SS.UserModel.IRow,Bing.Offices.Metadata.Excels.IRow)">
            <summary>
            转换
            </summary>
            <typeparam name="TTemplate">模板类型</typeparam>
            <param name="row">NPOI单元行</param>
            <param name="header">表头行</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Imports.ExcelImportProvider.GetStringValue(NPOI.SS.UserModel.ICell)">
            <summary>
            获取单元格值字符串
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Internals.InternalConst">
            <summary>
            内部常量
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Internals.InternalConst.MaxSheetCountXls">
            <summary>
            Xls 最大工作表数量
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Internals.InternalConst.MaxSheetCountXlsx">
            <summary>
            Xlsx 最大工作表数量
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Internals.InternalConst.MaxRowCountXls">
            <summary>
            Xls 最大行数
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Internals.InternalConst.MaxRowCountXlsx">
            <summary>
            Xlsx 最大行数
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Internals.InternalConst.ApplicationName">
            <summary>
            应用程序名称
            </summary>
        </member>
        <member name="T:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook">
            <summary>
            Npoi工作簿
            </summary>
        </member>
        <member name="F:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.MaxSensitveSheetNameLength">
            <summary>
            工作表名称最大长度
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.Sheets">
            <summary>
            工作表列表
            </summary>
        </member>
        <member name="P:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.Item(System.Int32)">
            <summary>
            工作表
            </summary>
            <param name="sheetIndex">工作表索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.GetSheet(System.String)">
            <summary>
            获取工作表
            </summary>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.GetSheetAt(System.Int32)">
            <summary>
            获取工作表
            </summary>
            <param name="sheetIndex">工作表索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.ValidateSheetIndex(System.Int32)">
            <summary>
            校验工作表索引
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.CreateSheet">
            <summary>
            创建工作表
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.CreateSheet(System.String)">
            <summary>
            创建工作表
            </summary>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.CreateSheet(System.String,System.Int32)">
            <summary>
            创建工作表
            </summary>
            <param name="sheetName">工作表名称</param>
            <param name="startRowIndex">起始行索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.ValidateSheetName(System.String)">
            <summary>
            校验工作表名称
            </summary>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.ContainsSheet(System.String,System.Int32)">
            <summary>
            是否包含工作表
            </summary>
            <param name="sheetName">工作表名称</param>
            <param name="excludeSheetIndex">忽略索引</param>
        </member>
        <member name="M:Bing.Offices.Npoi.Metadata.Excels.NpoiWorkbook.AddSheet(Bing.Offices.Metadata.Excels.IWorkSheet)">
            <summary>
            添加工作表
            </summary>
            <param name="sheet">工作表</param>
        </member>
        <member name="T:Bing.Offices.Npoi.Resolvers.ColorResolver">
            <summary>
            颜色解析器
            </summary>
        </member>
        <member name="M:Bing.Offices.Npoi.Resolvers.ColorResolver.Resolve(Bing.Offices.Styles.Color)">
            <summary>
            解析
            </summary>
            <param name="color">颜色枚举</param>
        </member>
    </members>
</doc>
