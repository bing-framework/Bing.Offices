<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Offices.Core</name>
    </assembly>
    <members>
        <member name="T:Bing.Offices.Attributes.BindDecoratorAttribute">
            <summary>
            绑定装饰器特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.BindDecoratorAttribute.DecoratorType">
            <summary>
            装饰器类型
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.BindDecoratorAttribute.#ctor(System.Type)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.BindDecoratorAttribute"/>类型的实例
            </summary>
            <param name="decoratorType">装饰器类型</param>
        </member>
        <member name="T:Bing.Offices.Attributes.BindFilterAttribute">
            <summary>
            绑定过滤器特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.BindFilterAttribute.FilterType">
            <summary>
            过滤器类型
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.BindFilterAttribute.#ctor(System.Type)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.BindFilterAttribute"/>类型的实例
            </summary>
            <param name="filterType">过滤器类型</param>
        </member>
        <member name="T:Bing.Offices.Attributes.ColumnNameAttribute">
            <summary>
            列名特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.ColumnNameAttribute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.ColumnNameAttribute.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.ColumnNameAttribute"/>类型的实例
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="T:Bing.Offices.Attributes.DataFormatAttribute">
            <summary>
            数据格式化特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.DataFormatAttribute.BuiltinFormat">
            <summary>
            内置格式。
            参考：https://poi.apache.org/apidocs/org/apache/poi/ss/usermodel/BuiltinFormats.html
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.DataFormatAttribute.CustomFormat">
            <summary>
            自定义格式。
            参考：https://support.office.com/en-nz/article/Create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.DataFormatAttribute.#ctor(System.Int16)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.DataFormatAttribute"/>类型的实例
            </summary>
            <param name="format">内置格式</param>
        </member>
        <member name="M:Bing.Offices.Attributes.DataFormatAttribute.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.DataFormatAttribute"/>类型的实例
            </summary>
            <param name="format">自定义格式</param>
        </member>
        <member name="T:Bing.Offices.Attributes.DecimalScaleAttribute">
            <summary>
            小数位数
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.DecimalScaleAttribute.Scale">
            <summary>
            保留小数位数
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.DecimalScaleAttribute.#ctor(System.Byte)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.DecimalScaleAttribute"/>类型的实例
            </summary>
            <param name="scale">保留小数位数，默认：2</param>
        </member>
        <member name="T:Bing.Offices.Attributes.HeaderAttribute">
            <summary>
            表头特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.HeaderAttribute.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.HeaderAttribute.FontName">
            <summary>
            字体名称
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.HeaderAttribute.FontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.HeaderAttribute.Bold">
            <summary>
            是否加粗
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.MergeColumnsAttribute">
            <summary>
            合并单元格特性
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.WrapTextAttribute">
            <summary>
            自动换行特性
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.ExcelIgnoreAttribute">
            <summary>
            Excel 忽略特性
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.DateTimeAttribute">
            <summary>
            日期特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.DateTimeAttribute.ErrorMsg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.DuplicationAttribute">
            <summary>
            重复数据校验特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.DuplicationAttribute.ErrorMsg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.DynamicColumnAttribute">
            <summary>
            动态列
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.MaxLengthAttribute">
            <summary>
            最大长度特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.MaxLengthAttribute.MaxLength">
            <summary>
            最大长度
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.MaxLengthAttribute.ErrorMsg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.MaxLengthAttribute.#ctor(System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.MaxLengthAttribute"/>类型的实例
            </summary>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="T:Bing.Offices.Attributes.RangeAttribute">
            <summary>
            区间特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.RangeAttribute.Min">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.RangeAttribute.Max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.RangeAttribute.ErrorMsg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.RangeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.RangeAttribute"/>类型的实例
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Offices.Attributes.RegexAttribute">
            <summary>
            正则表达式特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.RegexAttribute.RegexString">
            <summary>
            正则表达式字符串
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.RegexAttribute.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.RegexAttribute"/>类型的实例
            </summary>
            <param name="regex">正则表达式</param>
        </member>
        <member name="T:Bing.Offices.Attributes.RequiredAttribute">
            <summary>
            必填特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.RequiredAttribute.ErrorMsg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.HasDynamicColumnAttribute">
            <summary>
            含有动态列
            </summary>
        </member>
        <member name="T:Bing.Offices.Attributes.PlaceholderAttribute">
            <summary>
            普通占位符特性
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.PlaceholderAttribute.Placeholder">
            <summary>
            占位符
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.PlaceholderAttribute.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.PlaceholderAttribute"/>类型的实例
            </summary>
            <param name="placeholder">占位符</param>
        </member>
        <member name="T:Bing.Offices.Attributes.ValueMappingAttribute">
            <summary>
            值映射 特性
            </summary>
        </member>
        <member name="M:Bing.Offices.Attributes.ValueMappingAttribute.#ctor(System.String,System.Object)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Attributes.ValueMappingAttribute"/>类型的实例
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
        </member>
        <member name="P:Bing.Offices.Attributes.ValueMappingAttribute.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:Bing.Offices.Attributes.ValueMappingAttribute.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Bing.Offices.Configurations.ExcelConfiguration">
            <summary>
            Excel 配置
            </summary>
        </member>
        <member name="P:Bing.Offices.Configurations.ExcelConfiguration.PropertyConfigurationDictionary">
            <summary>
            属性配置字典
            </summary>
        </member>
        <member name="P:Bing.Offices.Configurations.ExcelConfiguration.ExcelSetting">
            <summary>
            Excel 设置
            </summary>
        </member>
        <member name="P:Bing.Offices.Configurations.ExcelConfiguration.SheetSettings">
            <summary>
            工作表设置
            </summary>
        </member>
        <member name="M:Bing.Offices.Configurations.ExcelConfiguration.HasExcelSetting(System.Action{Bing.Offices.Settings.ExcelSetting})">
            <summary>
            配置Excel设置
            </summary>
            <param name="configAction">配置操作</param>
        </member>
        <member name="M:Bing.Offices.Configurations.ExcelConfiguration.HasSheetSheeting(System.Action{Bing.Offices.Settings.SheetSetting},System.Int32)">
            <summary>
            配置工作表设置
            </summary>
            <param name="configAction">配置操作</param>
            <param name="sheetIndex">工作表索引</param>
        </member>
        <member name="T:Bing.Offices.Configurations.ExcelConfiguration`1">
            <summary>
            Excel 配置
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="P:Bing.Offices.Configurations.ExcelConfiguration`1.EntityType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="P:Bing.Offices.Configurations.ExcelConfiguration`1.DataValidationFunc">
            <summary>
            数据校验函数
            </summary>
        </member>
        <member name="M:Bing.Offices.Configurations.ExcelConfiguration`1.WithDataValidation(System.Func{`0,System.Boolean})">
            <summary>
            设置数据校验
            </summary>
            <param name="dataValidateFunc">数据校验函数</param>
        </member>
        <member name="M:Bing.Offices.Configurations.ExcelConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            设置属性配置
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:Bing.Offices.Configurations.ExcelConfiguration`1.Property``1(System.String)">
            <summary>
            设置属性配置
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyName">属性名</param>
        </member>
        <member name="T:Bing.Offices.Configurations.PropertyConfiguration">
            <summary>
            属性配置
            </summary>
        </member>
        <member name="T:Bing.Offices.CsvHelper">
            <summary>
            Csv帮助类
            </summary>
        </member>
        <member name="P:Bing.Offices.CsvHelper.CsvSeparatorCharacter">
            <summary>
            Csv 分隔符字符。默认：','
            </summary>
        </member>
        <member name="F:Bing.Offices.CsvHelper.CsvQuoteCharacter">
            <summary>
            Csv 引用字符。默认：'"'
            </summary>
        </member>
        <member name="M:Bing.Offices.CsvHelper.ToCsvFile(System.Data.DataTable,System.String)">
            <summary>
            转换为Csv文件
            </summary>
            <param name="dataTable">数据表</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:Bing.Offices.CsvHelper.ToCsvFile(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            转换为Csv文件
            </summary>
            <param name="dataTable">数据表</param>
            <param name="filePath">文件路径</param>
            <param name="includeHeader">是否包含表头</param>
        </member>
        <member name="M:Bing.Offices.CsvHelper.ToCsvBytes(System.Data.DataTable)">
            <summary>
            转换为Csv字节数组
            </summary>
            <param name="dataTable">数据表</param>
        </member>
        <member name="M:Bing.Offices.CsvHelper.ToCsvBytes(System.Data.DataTable,System.Boolean)">
            <summary>
            转换为Csv字节数组
            </summary>
            <param name="dataTable">数据表</param>
            <param name="includeHeader">是否包含表头</param>
        </member>
        <member name="M:Bing.Offices.CsvHelper.GetCsvText(System.Data.DataTable,System.Boolean)">
            <summary>
            获取Csv文本
            </summary>
            <param name="dataTable">数据表</param>
            <param name="includeHeader">是否包含表头</param>
        </member>
        <member name="T:Bing.Offices.Decorators.DecoratorAttributeComparer">
            <summary>
            装饰器特性比较器
            </summary>
        </member>
        <member name="M:Bing.Offices.Decorators.DecoratorAttributeComparer.Equals(Bing.Offices.Attributes.DecoratorAttributeBase,Bing.Offices.Attributes.DecoratorAttributeBase)">
            <summary>
            是否相等
            </summary>
            <param name="x">对象A</param>
            <param name="y">对象B</param>
        </member>
        <member name="M:Bing.Offices.Decorators.DecoratorAttributeComparer.GetHashCode(Bing.Offices.Attributes.DecoratorAttributeBase)">
            <summary>
            获取哈希编码
            </summary>
            <param name="obj">对象</param>
        </member>
        <member name="T:Bing.Offices.Decorators.DecoratorContext">
            <summary>
            装饰器上下文
            </summary>
        </member>
        <member name="P:Bing.Offices.Decorators.DecoratorContext.TypeDecoratorInfo">
            <summary>
            类型装饰器信息
            </summary>
        </member>
        <member name="T:Bing.Offices.Decorators.HeaderDecorator">
            <summary>
            表头装饰器
            </summary>
        </member>
        <member name="M:Bing.Offices.Decorators.HeaderDecorator.Handler``1(System.Byte[],Bing.Offices.Exports.IExportOptions{``0},Bing.Offices.Decorators.IDecoratorContext,Bing.Offices.Exports.IExcelExportProvider)">
            <summary>
            处理
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbookBytes">工作簿字节数组</param>
            <param name="options">导出选项配置</param>
            <param name="context">装饰器上下文</param>
            <param name="excelExportProvider">Excel导出提供程序</param>
        </member>
        <member name="T:Bing.Offices.Decorators.MergeColumnsDecorator">
            <summary>
            合并单元格装饰器
            </summary>
        </member>
        <member name="M:Bing.Offices.Decorators.MergeColumnsDecorator.Handler``1(System.Byte[],Bing.Offices.Exports.IExportOptions{``0},Bing.Offices.Decorators.IDecoratorContext,Bing.Offices.Exports.IExcelExportProvider)">
            <summary>
            处理
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbookBytes">工作簿字节数组</param>
            <param name="options">导出选项配置</param>
            <param name="context">装饰器上下文</param>
            <param name="excelExportProvider">Excel导出提供程序</param>
        </member>
        <member name="T:Bing.Offices.Decorators.WarpTextDecorator">
            <summary>
            自动换行装饰器
            </summary>
        </member>
        <member name="M:Bing.Offices.Decorators.WarpTextDecorator.Handler``1(System.Byte[],Bing.Offices.Exports.IExportOptions{``0},Bing.Offices.Decorators.IDecoratorContext,Bing.Offices.Exports.IExcelExportProvider)">
            <summary>
            处理
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbookBytes">工作簿字节数组</param>
            <param name="options">导出选项配置</param>
            <param name="context">装饰器上下文</param>
            <param name="excelExportProvider">Excel导出提供程序</param>
        </member>
        <member name="T:Bing.Offices.Exceptions.OfficeDataConvertException">
            <summary>
            Office数据转换异常
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeDataConvertException.PrimitiveType">
            <summary>
            原始类型
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeDataConvertException.TargetType">
            <summary>
            目标类型
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeDataConvertException.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeDataConvertException.ColumnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeDataConvertException.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeDataConvertException.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeDataConvertException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeDataConvertException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
            <param name="innerException">错误来源</param>
        </member>
        <member name="T:Bing.Offices.Exceptions.OfficeEmptyLineException">
            <summary>
            Office空行异常
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeEmptyLineException.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeEmptyLineException.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeEmptyLineException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeEmptyLineException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeEmptyLineException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
            <param name="innerException">错误来源</param>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeEmptyLineException.#ctor(System.String,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeEmptyLineException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="T:Bing.Offices.Exceptions.OfficeException">
            <summary>
            Office异常
            </summary>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeException.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeException"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeException.#ctor(System.String,System.Object[])">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeException"/>类型的实例
            </summary>
            <param name="msgFormat">格式化消息</param>
            <param name="objects">格式化参数</param>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
            <param name="innerException">错误来源</param>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeException"/>类型的实例
            </summary>
            <param name="info">序列化信息</param>
            <param name="context">流上下文</param>
        </member>
        <member name="T:Bing.Offices.Exceptions.OfficeHeaderException">
            <summary>
            Office表头缺列异常
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeHeaderException.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Exceptions.OfficeHeaderException.ColumnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeHeaderException.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeHeaderException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeHeaderException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeHeaderException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
            <param name="innerException">错误来源</param>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeHeaderException.#ctor(System.String,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeHeaderException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Exceptions.OfficeHeaderException.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exceptions.OfficeHeaderException"/>类型的实例
            </summary>
            <param name="message">序列化信息</param>
            <param name="rowIndex">行索引</param>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="T:Bing.Offices.Exports.ExcelExportService">
            <summary>
            Excel导出服务
            </summary>
        </member>
        <member name="F:Bing.Offices.Exports.ExcelExportService._excelExportProvider">
            <summary>
            Excel导出提供程序
            </summary>
        </member>
        <member name="M:Bing.Offices.Exports.ExcelExportService.#ctor(Bing.Offices.Exports.IExcelExportProvider)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Exports.ExcelExportService"/>类型的实例
            </summary>
            <param name="excelExportProvider">Excel导出提供程序</param>
        </member>
        <member name="M:Bing.Offices.Exports.ExcelExportService.ExportAsync``1(Bing.Offices.Exports.IExportOptions{``0})">
            <summary>
            导出
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="options">导出选项配置</param>
        </member>
        <member name="M:Bing.Offices.Exports.ExcelExportService.GetExportProvider``1(Bing.Offices.Exports.IExportOptions{``0})">
            <summary>
            获取导出提供程序
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="options">导出选项配置</param>
        </member>
        <member name="M:Bing.Offices.Exports.ExcelExportService.HandleDecorate``1(System.Byte[],Bing.Offices.Exports.IExportOptions{``0})">
            <summary>
            处理装饰
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbookBytes">工作簿字节数组</param>
            <param name="options">导出选项配置</param>
        </member>
        <member name="T:Bing.Offices.Exports.ExportOptions`1">
            <summary>
            导出选项配置
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.HeaderRow">
            <summary>
            行头
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.Data">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.ExportFormat">
            <summary>
            导出格式
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.SheetName">
            <summary>
            工作表名称
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.HeaderRowIndex">
            <summary>
            表头行索引。默认为0
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.DataRowStartIndex">
            <summary>
            数据行起始索引。默认为1
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.DynamicColumns">
            <summary>
            动态列
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.CustomExportProvider">
            <summary>
            自定义导出提供程序
            </summary>
        </member>
        <member name="P:Bing.Offices.Exports.ExportOptions`1.QueryCount">
            <summary>
            查询总数
            </summary>
        </member>
        <member name="T:Bing.Offices.Extensions.CellExtensions">
            <summary>
            单元格(<see cref="T:Bing.Offices.Metadata.Excels.ICell"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Extensions.CellExtensions.GetFilterAttribute``1(Bing.Offices.Metadata.Excels.ICell,Bing.Offices.Filters.TypeFilterInfo)">
            <summary>
            获取单元格的过滤器特性
            </summary>
            <typeparam name="T">过滤器特性类型</typeparam>
            <param name="cell">单元格</param>
            <param name="typeFilterInfo">类型过滤器信息</param>
        </member>
        <member name="M:Bing.Offices.Extensions.CellExtensions.GetFilterAttributes``1(Bing.Offices.Metadata.Excels.ICell,Bing.Offices.Filters.TypeFilterInfo)">
            <summary>
            获取单元格的过滤器特性集合
            </summary>
            <typeparam name="T">过滤器特性类型</typeparam>
            <param name="cell">单元格</param>
            <param name="typeFilterInfo">类型过滤器信息</param>
        </member>
        <member name="M:Bing.Offices.Extensions.CellExtensions.IsDateTime(Bing.Offices.Metadata.Excels.ICell)">
            <summary>
            是否日期
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Bing.Offices.Extensions.CellExtensions.IsInRange(Bing.Offices.Metadata.Excels.ICell,System.Decimal,System.Decimal)">
            <summary>
            是否在范围内
            </summary>
            <param name="cell">单元格</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Offices.Extensions.ExpressionExtension">
            <summary>
            Lambda表达式扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Extensions.ExpressionExtension.GetMemberInfo``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            获取成员信息
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TMember">成员类型</typeparam>
            <param name="expression">表达式</param>
        </member>
        <member name="M:Bing.Offices.Extensions.ExpressionExtension.ExtractMemberExpression(System.Linq.Expressions.Expression)">
            <summary>
            提取成员表达式
            </summary>
            <param name="expression">表达式</param>
        </member>
        <member name="T:Bing.Offices.Extensions.PropertyInfoExtensions">
            <summary>
            属性信息(<see cref="T:System.Reflection.PropertyInfo"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Extensions.PropertyInfoExtensions.HasIgnore(System.Reflection.PropertyInfo)">
            <summary>
            是否有忽略属性
            </summary>
            <param name="propertyInfo">属性信息</param>
        </member>
        <member name="T:Bing.Offices.Extensions.RowExtensions">
            <summary>
            单元行(<see cref="T:Bing.Offices.Metadata.Excels.IRow"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Extensions.RowExtensions.Valid(Bing.Offices.Metadata.Excels.IRow,System.Boolean,Bing.Offices.Metadata.Excels.ICell,System.String)">
            <summary>
            设置行校验结果
            </summary>
            <param name="row">单元行</param>
            <param name="valid">是否校验通过</param>
            <param name="cell">单元格</param>
            <param name="errorMsg">错误消息</param>
        </member>
        <member name="M:Bing.Offices.Extensions.RowExtensions.Convert``1(System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.IRow})">
            <summary>
            转换
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="rows">单元行集合</param>
        </member>
        <member name="M:Bing.Offices.Extensions.RowExtensions.ConvertByExpressTree``1(System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.IRow})">
            <summary>
            通过表达式树，将单元行集合快速转换为指定类型集合
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="rows">单元行集合</param>
        </member>
        <member name="M:Bing.Offices.Extensions.RowExtensions.GetFunc``1(Bing.Offices.Metadata.Excels.IRow)">
            <summary>
            获取转换函数
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="row">单元行</param>
        </member>
        <member name="T:Bing.Offices.Extensions.TypeDecoratorInfoExtensions">
            <summary>
            类型装饰器信息(<see cref="T:Bing.Offices.Decorators.TypeDecoratorInfo"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Extensions.TypeDecoratorInfoExtensions.GetDecoratorAttribute``1(Bing.Offices.Decorators.TypeDecoratorInfo)">
            <summary>
            获取装饰器特性
            </summary>
            <typeparam name="T">装饰器特性类型</typeparam>
            <param name="typeDecoratorInfo">类型装饰器信息</param>
        </member>
        <member name="M:Bing.Offices.Extensions.TypeDecoratorInfoExtensions.GetDecoratorAttributes``1(Bing.Offices.Decorators.TypeDecoratorInfo)">
            <summary>
            获取装饰器特性集合
            </summary>
            <typeparam name="T">装饰器特性类型</typeparam>
            <param name="typeDecoratorInfo">类型装饰器信息</param>
        </member>
        <member name="T:Bing.Offices.Extensions.TypeExtensions">
            <summary>
            类型(<see cref="T:System.Type"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Extensions.TypeExtensions.GetCSharpTypeName(System.Type)">
            <summary>
            获取CSharp类型名称
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:Bing.Offices.Extensions.TypeExtensions.GetEnumTextAndValues(System.Type)">
            <summary>
            获取枚举列表
            </summary>
            <param name="type">类型</param>
            <returns>
            key：返回显示名称或描述 <br/>
            value：值
            </returns>
        </member>
        <member name="M:Bing.Offices.Extensions.TypeExtensions.GetEnumDefinitionList(System.Type)">
            <summary>
            获取枚举定义列表
            </summary>
            <param name="type">类型</param>
            <returns>返回枚举列表元组（名称、值、显示名、描述）</returns>
        </member>
        <member name="T:Bing.Offices.Extensions.WorkbookExtensions">
            <summary>
            工作簿(<see cref="T:Bing.Offices.Metadata.Excels.IWorkbook"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Offices.Extensions.WorkbookExtensions.GetResult``1(Bing.Offices.Metadata.Excels.IWorkbook,System.Int32)">
            <summary>
            获取结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbook">工作簿</param>
            <param name="sheetIndex">工作表索引</param>
        </member>
        <member name="M:Bing.Offices.Extensions.WorkbookExtensions.GetResult``1(Bing.Offices.Metadata.Excels.IWorkbook)">
            <summary>
            获取结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="workbook">工作簿</param>
        </member>
        <member name="M:Bing.Offices.Extensions.WorkbookExtensions.Validate(Bing.Offices.Metadata.Excels.IWorkbook)">
            <summary>
            校验
            </summary>
            <param name="workbook">工作簿</param>
        </member>
        <member name="T:Bing.Offices.Factories.DecoratorFactory">
            <summary>
            装饰器工厂
            </summary>
        </member>
        <member name="F:Bing.Offices.Factories.DecoratorFactory.DecoratorDict">
            <summary>
            装饰器字典
            </summary>
        </member>
        <member name="F:Bing.Offices.Factories.DecoratorFactory.DecoratorsDict">
            <summary>
            装饰器集合字典
            </summary>
        </member>
        <member name="M:Bing.Offices.Factories.DecoratorFactory.CreateInstance(System.Type)">
            <summary>
            创建装饰器实例
            </summary>
            <param name="type">绑定装饰器的特性类型</param>
        </member>
        <member name="M:Bing.Offices.Factories.DecoratorFactory.CreateInstances``1">
            <summary>
            创建装饰器实例集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Bing.Offices.Factories.DecoratorFactory.CreateInstances(System.Type)">
            <summary>
            创建装饰器实例集合
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="T:Bing.Offices.Factories.ExportMappingFactory">
            <summary>
            导出映射工厂
            </summary>
        </member>
        <member name="F:Bing.Offices.Factories.ExportMappingFactory.MappingDict">
            <summary>
            映射字典
            </summary>
        </member>
        <member name="M:Bing.Offices.Factories.ExportMappingFactory.CreateInstance``1">
            <summary>
            创建映射字典实例
            </summary>
            <typeparam name="T">导出类型</typeparam>
        </member>
        <member name="M:Bing.Offices.Factories.ExportMappingFactory.CreateInstance(System.Type)">
            <summary>
            创建映射字典实例
            </summary>
            <param name="type">导出类型</param>
        </member>
        <member name="M:Bing.Offices.Factories.ExportMappingFactory.SetColumnName(System.Reflection.PropertyInfo,Bing.Offices.Settings.PropertySetting)">
            <summary>
            设置列名
            </summary>
            <param name="propertyInfo">属性信息</param>
            <param name="setting">属性设置</param>
        </member>
        <member name="M:Bing.Offices.Factories.ExportMappingFactory.HasDynamicColumn(System.Reflection.PropertyInfo)">
            <summary>
            是否有动态列属性
            </summary>
            <param name="propertyInfo">属性信息</param>
        </member>
        <member name="M:Bing.Offices.Factories.ExportMappingFactory.SetFormatter(System.Reflection.PropertyInfo,Bing.Offices.Settings.PropertySetting)">
            <summary>
            设置格式化字符串
            </summary>
            <param name="propertyInfo">属性信息</param>
            <param name="setting">属性设置</param>
        </member>
        <member name="M:Bing.Offices.Factories.ExportMappingFactory.SetScale(System.Reflection.PropertyInfo,Bing.Offices.Settings.PropertySetting)">
            <summary>
            设置保留小数位数
            </summary>
            <param name="propertyInfo">属性信息</param>
            <param name="setting">属性设置</param>
        </member>
        <member name="M:Bing.Offices.Factories.ExportMappingFactory.SetValueMapping(System.Reflection.PropertyInfo,Bing.Offices.Settings.PropertySetting)">
            <summary>
            设置值映射
            </summary>
            <param name="propertyInfo">属性信息</param>
            <param name="setting">属性设置</param>
        </member>
        <member name="T:Bing.Offices.Factories.FilterFactory">
            <summary>
            过滤器工厂
            </summary>
        </member>
        <member name="F:Bing.Offices.Factories.FilterFactory.FilterDict">
            <summary>
            过滤器字典
            </summary>
        </member>
        <member name="F:Bing.Offices.Factories.FilterFactory.FiltersDict">
            <summary>
            过滤器集合字典
            </summary>
        </member>
        <member name="M:Bing.Offices.Factories.FilterFactory.CreateInstance(System.Type)">
            <summary>
            创建过滤器实例
            </summary>
            <param name="type">绑定过滤器的特性类型s</param>
        </member>
        <member name="M:Bing.Offices.Factories.FilterFactory.CreateInstances``1">
            <summary>
            创建过滤器实例集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="T:Bing.Offices.Factories.TypeDecoratorInfoFactory">
            <summary>
            类型装饰器信息工厂
            </summary>
        </member>
        <member name="F:Bing.Offices.Factories.TypeDecoratorInfoFactory.TypeDecoratorDict">
            <summary>
            类型装饰器字典
            </summary>
        </member>
        <member name="M:Bing.Offices.Factories.TypeDecoratorInfoFactory.CreateInstance(System.Type)">
            <summary>
            创建类型装饰器信息实例
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="T:Bing.Offices.Factories.TypeFilterInfoFactory">
            <summary>
            类型过滤器信息工厂
            </summary>
        </member>
        <member name="F:Bing.Offices.Factories.TypeFilterInfoFactory.TypeFilterDict">
            <summary>
            类型过滤器字典
            </summary>
        </member>
        <member name="M:Bing.Offices.Factories.TypeFilterInfoFactory.CreateInstance(System.Type)">
            <summary>
            创建类型过滤器信息实例
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="T:Bing.Offices.Filters.AndFilter">
            <summary>
            且过滤器
            </summary>
        </member>
        <member name="P:Bing.Offices.Filters.AndFilter.Filters">
            <summary>
            过滤器列表
            </summary>
        </member>
        <member name="P:Bing.Offices.Filters.AndFilter.AttributeType">
            <summary>
            特性类型
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.AndFilter.Filter(Bing.Offices.Metadata.Excels.IWorkbook,Bing.Offices.Filters.IFilterContext,Bing.Offices.Imports.IImportOptions)">
            <summary>
            过滤
            </summary>
            <param name="workbook">工作簿</param>
            <param name="context">过滤器上下文</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="T:Bing.Offices.Filters.DateTimeFilter">
            <summary>
            日期过滤器
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.DateTimeFilter.Filter(Bing.Offices.Metadata.Excels.IWorkbook,Bing.Offices.Filters.IFilterContext,Bing.Offices.Imports.IImportOptions)">
            <summary>
            过滤
            </summary>
            <param name="workbook">工作簿</param>
            <param name="context">过滤器上下文</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="T:Bing.Offices.Filters.DuplicateFilter">
            <summary>
            重复过滤器
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.DuplicateFilter.Filter(Bing.Offices.Metadata.Excels.IWorkbook,Bing.Offices.Filters.IFilterContext,Bing.Offices.Imports.IImportOptions)">
            <summary>
            过滤
            </summary>
            <param name="workbook">工作簿</param>
            <param name="context">过滤器上下文</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="T:Bing.Offices.Filters.FilterAttributeComparer">
            <summary>
            过滤器特性比较器
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.FilterAttributeComparer.Equals(Bing.Offices.Attributes.FilterAttributeBase,Bing.Offices.Attributes.FilterAttributeBase)">
            <summary>
            是否相等
            </summary>
            <param name="x">对象A</param>
            <param name="y">对象B</param>
        </member>
        <member name="M:Bing.Offices.Filters.FilterAttributeComparer.GetHashCode(Bing.Offices.Attributes.FilterAttributeBase)">
            <summary>
            获取哈希编码
            </summary>
            <param name="obj">对象</param>
        </member>
        <member name="T:Bing.Offices.Filters.FilterContext">
            <summary>
            过滤器上下文
            </summary>
        </member>
        <member name="P:Bing.Offices.Filters.FilterContext.TypeFilterInfo">
            <summary>
            类型过滤器信息
            </summary>
        </member>
        <member name="T:Bing.Offices.Filters.MaxLengthFilter">
            <summary>
            最大长度过滤器
            </summary>
        </member>
        <member name="P:Bing.Offices.Filters.MaxLengthFilter.MaxLength">
            <summary>
            最大长度
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.MaxLengthFilter.Filter(Bing.Offices.Metadata.Excels.IWorkbook,Bing.Offices.Filters.IFilterContext,Bing.Offices.Imports.IImportOptions)">
            <summary>
            过滤
            </summary>
            <param name="workbook">工作簿</param>
            <param name="context">过滤器上下文</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="T:Bing.Offices.Filters.RangeFilter">
            <summary>
            区间范围过滤器
            </summary>
        </member>
        <member name="P:Bing.Offices.Filters.RangeFilter.Min">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:Bing.Offices.Filters.RangeFilter.Max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.RangeFilter.Filter(Bing.Offices.Metadata.Excels.IWorkbook,Bing.Offices.Filters.IFilterContext,Bing.Offices.Imports.IImportOptions)">
            <summary>
            过滤
            </summary>
            <param name="workbook">工作簿</param>
            <param name="context">过滤器上下文</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="T:Bing.Offices.Filters.RegexFilter">
            <summary>
            正则表达式过滤器
            </summary>
        </member>
        <member name="P:Bing.Offices.Filters.RegexFilter.RegexString">
            <summary>
            正则表达式字符串
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.RegexFilter.Filter(Bing.Offices.Metadata.Excels.IWorkbook,Bing.Offices.Filters.IFilterContext,Bing.Offices.Imports.IImportOptions)">
            <summary>
            过滤
            </summary>
            <param name="workbook">工作簿</param>
            <param name="context">过滤器上下文</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="T:Bing.Offices.Filters.RequiredFilter">
            <summary>
            必填过滤器
            </summary>
        </member>
        <member name="M:Bing.Offices.Filters.RequiredFilter.Filter(Bing.Offices.Metadata.Excels.IWorkbook,Bing.Offices.Filters.IFilterContext,Bing.Offices.Imports.IImportOptions)">
            <summary>
            过滤
            </summary>
            <param name="workbook">工作簿</param>
            <param name="context">过滤器上下文</param>
            <param name="options">导入选项配置</param>
        </member>
        <member name="T:Bing.Offices.FluentSettings">
            <summary>
            设置
            </summary>
        </member>
        <member name="F:Bing.Offices.FluentSettings.MappingProfileConfigureMethodName">
            <summary>
            映射配置文件的配置方法名
            </summary>
        </member>
        <member name="F:Bing.Offices.FluentSettings._profileGenericTypeDefinition">
            <summary>
            映射配置文件的泛型类型定义
            </summary>
        </member>
        <member name="M:Bing.Offices.FluentSettings.For``1">
            <summary>
            获取指定实体配置入口点
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Bing.Offices.FluentSettings.LoadMappingProfiles(System.Reflection.Assembly[])">
            <summary>
            加载映射配置文件
            </summary>
            <param name="assemblies">程序集数组</param>
        </member>
        <member name="M:Bing.Offices.FluentSettings.LoadMappingProfiles(System.Type[])">
            <summary>
            加载映射配置文件
            </summary>
            <param name="types">映射配置文件类型数组</param>
        </member>
        <member name="M:Bing.Offices.FluentSettings.LoadMappingProfile``2">
            <summary>
            加载映射配置文件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TMappingProfile">映射配置文件类型</typeparam>
        </member>
        <member name="M:Bing.Offices.FluentSettings.LoadMappingProfile``1(Bing.Offices.IMappingProfile{``0})">
            <summary>
            加载映射配置文件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="profile">映射配置文件</param>
        </member>
        <member name="M:Bing.Offices.FluentSettings.LoadMappingProfile``1">
            <summary>
            加载映射配置文件
            </summary>
            <typeparam name="TMappingProfile">映射配置文件类型</typeparam>
        </member>
        <member name="M:Bing.Offices.FluentSettings.LoadMappingProfile(Bing.Offices.IMappingProfile)">
            <summary>
            加载映射配置文件
            </summary>
            <param name="profile">映射配置文件</param>
        </member>
        <member name="T:Bing.Offices.Helpers.ExpressionMapper">
            <summary>
            表达式树映射
            </summary>
        </member>
        <member name="F:Bing.Offices.Helpers.ExpressionMapper._table">
            <summary>
            哈希表
            </summary>
        </member>
        <member name="M:Bing.Offices.Helpers.ExpressionMapper.FastConvert``1(Bing.Offices.Metadata.Excels.IRow,System.Func{System.Collections.Generic.IList{Bing.Offices.Metadata.Excels.ICell},``0})">
            <summary>
            将单元行快速转换为指定类型
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="row">单元行</param>
            <param name="func">转换函数</param>
        </member>
        <member name="M:Bing.Offices.Helpers.ExpressionMapper.GetFunc``1(System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <summary>
            获取转换函数
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键</param>
            <param name="props">属性信息集合</param>
        </member>
        <member name="M:Bing.Offices.Helpers.ExpressionMapper.GetDictionaryBinding(System.Reflection.PropertyInfo,System.Linq.Expressions.ParameterExpression)">
            <summary>
            获取字典绑定表达式
            </summary>
            <param name="prop">属性信息</param>
            <param name="cellsParam">单元格列表参数</param>
        </member>
        <member name="M:Bing.Offices.Helpers.ExpressionMapper.GetMapperBinding(System.Reflection.PropertyInfo,System.Reflection.MethodInfo,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression{System.Func{Bing.Offices.Metadata.Excels.ICell,System.Boolean}})">
            <summary>
            获取映射绑定表达式
            </summary>
            <param name="prop">属性信息</param>
            <param name="firstOrDefaultMethod">FirstOrDefault方法</param>
            <param name="cellsParam">单元格列表参数</param>
            <param name="propertyEqualExpr">属性相等表达式</param>
        </member>
        <member name="M:Bing.Offices.Helpers.ExpressionMapper.ChangeType(System.Object,System.Type,Bing.Offices.Metadata.Excels.ICell)">
            <summary>
            变更类型
            </summary>
            <param name="value">值</param>
            <param name="type">类型</param>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Bing.Offices.Helpers.ExpressionMapper.ConvertToDictionary(System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.ICell})">
            <summary>
            转换为字典
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="T:Bing.Offices.Imports.ExcelImporter">
            <summary>
            Excel 导入器
            </summary>
        </member>
        <member name="M:Bing.Offices.Imports.ExcelImporter.GenerateTemplateBytesAsync``1">
            <summary>
            生成导入模板
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns>二进制字节数组</returns>
        </member>
        <member name="T:Bing.Offices.Imports.ExcelImportService">
            <summary>
            Excel导入服务
            </summary>
        </member>
        <member name="F:Bing.Offices.Imports.ExcelImportService._excelImportProvider">
            <summary>
            Excel导入提供程序
            </summary>
        </member>
        <member name="M:Bing.Offices.Imports.ExcelImportService.#ctor(Bing.Offices.Imports.IExcelImportProvider)">
            <summary>
            初始一个<see cref="T:Bing.Offices.Imports.ExcelImportService"/>类型的实例
            </summary>
            <param name="excelImportProvider">Excel导入提供程序</param>
        </member>
        <member name="M:Bing.Offices.Imports.ExcelImportService.ImportAsync``1(Bing.Offices.Imports.IImportOptions)">
            <summary>
            导入
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="options">导入选项配置</param>
        </member>
        <member name="M:Bing.Offices.Imports.ExcelImportService.GetWorkbook``1(Bing.Offices.Imports.IImportOptions)">
            <summary>
            获取工作簿
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="options">导入选项配置</param>
        </member>
        <member name="M:Bing.Offices.Imports.ExcelImportService.MappingHeaderDictionary(Bing.Offices.Metadata.Excels.IWorkbook,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            映射表头字典数据
            </summary>
            <param name="workbook">工作簿</param>
            <param name="headerDictionary">表头映射字典</param>
        </member>
        <member name="T:Bing.Offices.Imports.ImportOptions">
            <summary>
            导入选项配置
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.FileUrl">
            <summary>
            文件地址
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.SheetIndex">
            <summary>
            工作表索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.MultiSheet">
            <summary>
            是否支持多工作表模式
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.HeaderRowIndex">
            <summary>
            表头行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.EnabledHeaderRowCache">
            <summary>
            启用表头行缓存
            true 启用，
            false 不启用，
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.HeaderColumnOnly">
            <summary>
            表头列唯一
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.HeaderMatch">
            <summary>
            表头匹配：默认验证
            true 验证完全匹配，
            false 不验证匹配，
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.DataRowIndex">
            <summary>
            数据行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.MaxColumnLength">
            <summary>
            最大列长度
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.EnabledEmptyLine">
            <summary>
            启用空行模式。启用时，行内遇到空行将抛出异常错误信息
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.IgnoreEmptyLineAfterData">
            <summary>
            忽略空行后数据。启用时，行内遇到空行将不在读取数据
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.MappingDictionary">
            <summary>
            映射字典
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.ValidateMode">
            <summary>
            校验模式
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ImportOptions.CustomImportProvider">
            <summary>
            自定义导入提供程序
            </summary>
        </member>
        <member name="T:Bing.Offices.Imports.ValidateResult">
            <summary>
            验证结果
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ValidateResult.SheetName">
            <summary>
            工作表名称
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ValidateResult.RowIndex">
            <summary>
            行号
            </summary>
        </member>
        <member name="P:Bing.Offices.Imports.ValidateResult.ErrorMsg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="T:Bing.Offices.Internals.InternalCache">
            <summary>
            内部缓存
            </summary>
        </member>
        <member name="F:Bing.Offices.Internals.InternalCache.TypeExcelConfigurationDictionary">
            <summary>
            类型 - Excel配置 字典
            </summary>
        </member>
        <member name="F:Bing.Offices.Internals.InternalCache.OutputFormatterFuncCache">
            <summary>
            输出格式化函数 缓存
            </summary>
        </member>
        <member name="F:Bing.Offices.Internals.InternalCache.InputFormatterFuncCache">
            <summary>
            输入格式化函数 缓存
            </summary>
        </member>
        <member name="F:Bing.Offices.Internals.InternalCache.ColumnInputFormatterFunCache">
            <summary>
            列输入格式化函数 缓存
            </summary>
        </member>
        <member name="T:Bing.Offices.Internals.InternalHelper">
            <summary>
            内部帮助类
            </summary>
        </member>
        <member name="M:Bing.Offices.Internals.InternalHelper.GetExcelConfigurationMapping(System.Type)">
            <summary>
            获取Excel配置映射
            </summary>
            <param name="entityType">实体类型</param>
        </member>
        <member name="M:Bing.Offices.Internals.InternalHelper.GetExcelConfigurationMapping``1">
            <summary>
            获取Excel配置映射
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Bing.Offices.Internals.InternalHelper.CreateExcelConfiguration(System.Type,System.Func{Bing.Offices.Configurations.ExcelConfiguration})">
            <summary>
            创建Excel配置
            </summary>
            <param name="type">实体类型</param>
            <param name="newConfigurationFunc">创建Excel配置函数</param>
        </member>
        <member name="M:Bing.Offices.Internals.InternalHelper.GetEncodedColumnName(System.String)">
            <summary>
            获取编码列名
            </summary>
            <param name="columnName">列名</param>
        </member>
        <member name="M:Bing.Offices.Internals.InternalHelper.GetDecodeColumnName(System.String)">
            <summary>
            获取解码列名
            </summary>
            <param name="columnName">列名</param>
        </member>
        <member name="T:Bing.Offices.Metadata.Excels.Cell">
            <summary>
            单元格
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.Cell._columnSpan">
            <summary>
            列跨度
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.Cell._rowSpan">
            <summary>
            行跨度
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.ColumnSpan">
            <summary>
            列跨度
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.RowSpan">
            <summary>
            行跨度
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.ColumnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.PhysicalRowIndex">
            <summary>
            物理行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.EndColumnIndex">
            <summary>
            结束列索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.EndRowIndex">
            <summary>
            结束行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.NeedMerge">
            <summary>
            是否需要合并单元格。true:是,false:否
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.PropertyName">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Cell.IsDynamic">
            <summary>
            是否动态单元格
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Cell.#ctor(System.Object,System.Int32,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.Cell"/>类型的实例
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Cell.#ctor(System.Object,System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.Cell"/>类型的实例
            </summary>
            <param name="value">值</param>
            <param name="columnIndex">列索引</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Cell.IsNull">
            <summary>
            是否为空单元格
            </summary>
        </member>
        <member name="T:Bing.Offices.Metadata.Excels.Internal.IndexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.Internal.IndexManager._list">
            <summary>
            索引列表
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexManager.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.Internal.IndexManager"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexManager.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexManager.AddIndex(System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexManager.AddIndex(Bing.Offices.Metadata.Excels.Internal.IndexRange,System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
            <param name="range">索引范围</param>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="T:Bing.Offices.Metadata.Excels.Internal.IndexRange">
            <summary>
            索引范围
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Internal.IndexRange.Index">
            <summary>
            当前索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Internal.IndexRange.EndIndex">
            <summary>
            结束索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Internal.IndexRange.IsEnd">
            <summary>
            是否已结束
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexRange.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.Internal.IndexRange"/>类型的实例
            </summary>
            <param name="index">当前索引</param>
            <param name="endIndex">结束索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexRange.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexRange.Contains(System.Int32)">
            <summary>
            判断是否包含该索引
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Internal.IndexRange.Split(System.Int32,System.Int32)">
            <summary>
            分割索引范围
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="T:Bing.Offices.Metadata.Excels.NullCell">
            <summary>
            空单元格
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.NullCell.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.NullCell"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.NullCell.IsNull">
            <summary>
            是否为空单元格
            </summary>
        </member>
        <member name="T:Bing.Offices.Metadata.Excels.Range">
            <summary>
            单元范围
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.Range._rows">
            <summary>
            单元行列表
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.Range._startIndex">
            <summary>
            起始索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Range.Item(System.Int32)">
            <summary>
            单元行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Range.MaxColumnCount">
            <summary>
            最大列数
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Range.RowCount">
            <summary>
            行数
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.#ctor(System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.Range"/>类型的实例
            </summary>
            <param name="startIndex">起始索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.GetRow(System.Int32)">
            <summary>
            获取单元行
            </summary>
            <param name="rowIndex">行索引。对应Excel表格行号</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.GetRows">
            <summary>
            获取单元行列表
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.AddRow(System.Int32,System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.ICell})">
            <summary>
            添加单元行
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="cells">单元格列表</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.AddRow(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.ICell})">
            <summary>
            添加单元行
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="physicalRowIndex">物理行索引</param>
            <param name="cells">单元格列表</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.CreateRow(System.Int32)">
            <summary>
            创建单元行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.AddCell(Bing.Offices.Metadata.Excels.IRow,Bing.Offices.Metadata.Excels.ICell,System.Int32)">
            <summary>
            添加单元格
            </summary>
            <param name="row">单元行</param>
            <param name="cell">单元格</param>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.AddPlaceholderCell(Bing.Offices.Metadata.Excels.ICell,System.Int32)">
            <summary>
            为下方受RowSpan影响的单元行添加占位单元格
            </summary>
            <param name="cell">单元格</param>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Range.Clear">
            <summary>
            清空单元行
            </summary>
        </member>
        <member name="T:Bing.Offices.Metadata.Excels.Row">
            <summary>
            单元行
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.Row._indexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Row.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Row.PhysicalRowIndex">
            <summary>
            物理行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Row.Valid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Row.ErrorMsg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Row.Cells">
            <summary>
            单元格列表
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Row.Item(System.Int32)">
            <summary>
            单元格
            </summary>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.Row.ColumnCount">
            <summary>
            列数
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Row.#ctor(System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.Row"/>类型的实例
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Row.Add(System.Object,System.Int32,System.Int32)">
            <summary>
            添加单元格
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Row.Add(Bing.Offices.Metadata.Excels.ICell)">
            <summary>
            添加单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.Row.SetColumnIndex(Bing.Offices.Metadata.Excels.ICell)">
            <summary>
            设置列索引
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="T:Bing.Offices.Metadata.Excels.WorkSheet">
            <summary>
            工作表
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.WorkSheet._header">
            <summary>
            头部单元范围
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.WorkSheet._body">
            <summary>
            正文单元范围
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.WorkSheet._footer">
            <summary>
            底部单元范围
            </summary>
        </member>
        <member name="F:Bing.Offices.Metadata.Excels.WorkSheet._rowIndex">
            <summary>
            当前行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.WorkSheet.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.WorkSheet.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.WorkSheet.MaxColumnCount">
            <summary>
            最大列数
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.WorkSheet.RowCount">
            <summary>
            行数
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.WorkSheet.HeadRowCount">
            <summary>
            表头行数
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.WorkSheet.BodyRowCount">
            <summary>
            正文行数
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.Excels.WorkSheet.FootRowCount">
            <summary>
            页脚行数
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.WorkSheet"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.#ctor(System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.Excels.WorkSheet"/>类型的实例
            </summary>
            <param name="rowIndex">起始行索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.GetHeader">
            <summary>
            获取表头
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.GetBody">
            <summary>
            获取正文
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.GetFooter">
            <summary>
            获取页脚
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddHeadRow(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">标题</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.CreateCell(System.Object)">
            <summary>
            创建单元格
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddHeadRow(Bing.Offices.Metadata.Excels.ICell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">单元格</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddRowToHeader(System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.ICell})">
            <summary>
            添加表头行
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.ResetFirstColumnSpan">
            <summary>
            重置第一行的列跨度，第一行可能为总标题
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddBodyRow(System.Object[])">
            <summary>
            添加正文
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddBodyRow(System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.ICell})">
            <summary>
            添加正文
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddBodyRow(System.Collections.Generic.IEnumerable{Bing.Offices.Metadata.Excels.ICell},System.Int32)">
            <summary>
            添加正文
            </summary>
            <param name="cells">单元格集合</param>
            <param name="physicalRowIndex">物理行索引</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.GetBodyRange">
            <summary>
            获取正文单元范围
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddFootRow(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.AddFootRow(Bing.Offices.Metadata.Excels.ICell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.GetFootRange">
            <summary>
            获取页脚单元范围
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.Excels.WorkSheet.ClearHeader">
            <summary>
            清空表头
            </summary>
        </member>
        <member name="T:Bing.Offices.Metadata.MergedRegionInfo">
            <summary>
            合并区域信息
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.MergedRegionInfo.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.MergedRegionInfo.FirstRow">
            <summary>
            左上角X坐标
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.MergedRegionInfo.LastRow">
            <summary>
            右下角X坐标
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.MergedRegionInfo.FirstCol">
            <summary>
            左上角Y坐标
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.MergedRegionInfo.LastCol">
            <summary>
            右下角Y坐标
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.MergedRegionInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.MergedRegionInfo"/>类型的实例
            </summary>
            <param name="index">索引</param>
            <param name="firstRow">左上角X坐标</param>
            <param name="lastRow">右下角X坐标</param>
            <param name="firstCol">左上角Y坐标</param>
            <param name="lastCol">右下角Y坐标</param>
        </member>
        <member name="T:Bing.Offices.Metadata.PictureInfo">
            <summary>
            图片信息
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.PictureInfo.MinRow">
            <summary>
            最小行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.PictureInfo.MaxRow">
            <summary>
            最大行索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.PictureInfo.MinCol">
            <summary>
            最小列索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.PictureInfo.MaxCol">
            <summary>
            最大列索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.PictureInfo.PictureData">
            <summary>
            图片数据
            </summary>
        </member>
        <member name="P:Bing.Offices.Metadata.PictureInfo.PictureStyle">
            <summary>
            图片样式
            </summary>
        </member>
        <member name="M:Bing.Offices.Metadata.PictureInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],Bing.Offices.Metadata.PictureStyle)">
            <summary>
            初始化一个<see cref="T:Bing.Offices.Metadata.PictureInfo"/>类型的实例
            </summary>
            <param name="minRow">最小行索引</param>
            <param name="maxRow">最大行索引</param>
            <param name="minCol">最小列索引</param>
            <param name="maxCol">最大列索引</param>
            <param name="pictureData">图片数据</param>
            <param name="pictureStyle">图片样式</param>
        </member>
        <member name="T:Bing.Offices.Metadata.PictureStyle">
            <summary>
            图片样式
            </summary>
        </member>
        <member name="T:Bing.Offices.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Bing.Offices.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Bing.Offices.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:Bing.Offices.Resources.No">
            <summary>
              查找类似 否 的本地化字符串。
            </summary>
        </member>
        <member name="P:Bing.Offices.Resources.PropertyExpression_Must_LambdaExpression">
            <summary>
              查找类似 {0} 必须是Lambda表达式。 的本地化字符串。
            </summary>
        </member>
        <member name="P:Bing.Offices.Resources.Yes">
            <summary>
              查找类似 是 的本地化字符串。
            </summary>
        </member>
        <member name="T:Bing.Offices.Settings.PropertySetting">
            <summary>
            属性设置
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.Index">
            <summary>
            列索引
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.Title">
            <summary>
            列标题
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.Formatter">
            <summary>
            列格式化程序
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.Ignored">
            <summary>
            是否忽略属性
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.DecimalScale">
            <summary>
            保留小数位数
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.MappingValues">
            <summary>
            映射值 字典
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.IsDynamicColumn">
            <summary>
            是否动态列
            </summary>
        </member>
        <member name="P:Bing.Offices.Settings.PropertySetting.DynamicColumns">
            <summary>
            动态列
            </summary>
        </member>
        <member name="M:Bing.Offices.Settings.PropertySetting.SetDynamicColumn(System.Collections.Generic.IList{System.String})">
            <summary>
            设置动态列
            </summary>
            <param name="dynamicColumns">动态列</param>
        </member>
        <member name="T:Bing.Offices.Styles.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Black">
            <summary>
            黑色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Brown">
            <summary>
            棕色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.OliveGreen">
            <summary>
            橄榄绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.DarkGreen">
            <summary>
            墨绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.DarkTeal">
            <summary>
            深蓝绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.DarkBlue">
            <summary>
            深蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Indigo">
            <summary>
            靛蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Grey80Percent">
            <summary>
            深灰色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Orange">
            <summary>
            橙色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.DarkYellow">
            <summary>
            深黄色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Green">
            <summary>
            绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Teal">
            <summary>
            青色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Blue">
            <summary>
            蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.BlueGrey">
            <summary>
            蓝灰色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Grey50Percent">
            <summary>
            浅蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Red">
            <summary>
            红色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.LightOrange">
            <summary>
            浅橘色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Lime">
            <summary>
            黄绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.SeaGreen">
            <summary>
            海绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Aqua">
            <summary>
            湖绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.LightBlue">
            <summary>
            浅蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Violet">
            <summary>
            紫罗兰色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Grey40Percent">
            <summary>
            浅灰色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Pink">
            <summary>
            粉红色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Gold">
            <summary>
            金黄色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Yellow">
            <summary>
            黄色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.BrightGreen">
            <summary>
            鲜绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Turquoise">
            <summary>
            青绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.DarkRed">
            <summary>
            深红色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.SkyBlue">
            <summary>
            天蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Plum">
            <summary>
            玫红色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Grey25Percent">
            <summary>
            灰白色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Rose">
            <summary>
            玫瑰色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.LightYellow">
            <summary>
            浅黄色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.LightGreen">
            <summary>
            浅绿色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.LightTurquoise">
            <summary>
            浅绿松色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.PaleBlue">
            <summary>
            浅蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Lavender">
            <summary>
            淡紫色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.White">
            <summary>
            白色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.CornflowerBlue">
            <summary>
            蓝紫色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.LemonChiffon">
            <summary>
            柠檬绸色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Maroon">
            <summary>
            褐红色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Orchid">
            <summary>
            淡紫色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Coral">
            <summary>
            粉红色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.RoyalBlue">
            <summary>
            宝蓝色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.LightCornflowerBlue">
            <summary>
            浅蓝紫色
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.Color.Tan">
            <summary>
            棕褐色
            </summary>
        </member>
        <member name="T:Bing.Offices.Styles.ExcelStyle">
            <summary>
            Excel样式
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.ExcelStyle.Title">
            <summary>
            标题灰色背景
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.ExcelStyle.Left">
            <summary>
            左对齐
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.ExcelStyle.Right">
            <summary>
            右对齐
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.ExcelStyle.Date">
            <summary>
            时间格式 - 右对齐
            </summary>
        </member>
        <member name="F:Bing.Offices.Styles.ExcelStyle.Money">
            <summary>
            金钱格式 - 右对齐
            </summary>
        </member>
        <member name="T:Bing.Offices.InternalConst">
            <summary>
            内部常量
            </summary>
        </member>
        <member name="F:Bing.Offices.InternalConst.MaxSheetNum">
            <summary>
            最大工作表数量
            </summary>
        </member>
        <member name="F:Bing.Offices.InternalConst.DefaultPropertyNameForBasicType">
            <summary>
            基本类型的默认属性名称
            </summary>
        </member>
        <member name="F:Bing.Offices.InternalConst.ApplicationName">
            <summary>
            应用名称
            </summary>
        </member>
        <member name="F:Bing.Offices.InternalConst.DuplicateColumnMark">
            <summary>
            重复列标记
            </summary>
        </member>
        <member name="T:Bing.Offices.RegexConst">
            <summary>
            正则常量
            </summary>
        </member>
        <member name="F:Bing.Offices.RegexConst.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="F:Bing.Offices.RegexConst.ChinaMobile">
            <summary>
            国内手机号
            </summary>
        </member>
        <member name="F:Bing.Offices.RegexConst.IdCard">
            <summary>
            身份证
            </summary>
        </member>
        <member name="F:Bing.Offices.RegexConst.NotEmpty">
            <summary>
            非空
            </summary>
        </member>
        <member name="F:Bing.Offices.RegexConst.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:Bing.Offices.RegexConst.Url">
            <summary>
            网址URL
            </summary>
        </member>
        <member name="F:Bing.Offices.RegexConst.ChinaCarCode">
            <summary>
            国内车牌号
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
            Specifies that null is allowed as an input even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute">
            <summary>
            Indicates that the specified method parameter expects a constant.
            </summary>
            <remarks>
            This can be used to inform tooling that a constant should be used as an argument for the annotated parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute.Min">
            <summary>
            Indicates the minimum bound of the expected constant, inclusive.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute.Max">
            <summary>
            Indicates the maximum bound of the expected constant, inclusive.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
            Specifies that null is disallowed as an input even if the corresponding type allows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
            Applied to a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified parameter value.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable
            by diagnostics if the argument to the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
            Gets the condition parameter value.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute">
            <summary>
            Indicates that an API is experimental and it may change in the future.
            </summary>
            <remarks>
            This attribute allows call sites to be flagged with a diagnostic that indicates that an experimental
            feature is used. Authors can use this attribute to ship preview features in their assemblies.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute"/> class,
            specifying the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <param name="diagnosticId">The ID that the compiler will use when reporting a use of the API the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.DiagnosticId">
            <summary>
            Gets the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <value>The unique diagnostic ID.</value>
            <remarks>
            The diagnostic ID is shown in build output for warnings and errors.
            <para>This property represents the unique ID that can be used to suppress the warnings or errors, if needed.</para>
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.UrlFormat">
            <summary>
            Gets or sets the URL for corresponding documentation.
            The API accepts a format string instead of an actual URL, creating a generic URL that includes the diagnostic ID.
            </summary>
            <value>The format string that represents a URL to corresponding documentation.</value>
            <remarks>An example format string is <c>https://contoso.com/obsoletion-warnings/{0}</c>.</remarks>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
            Specifies that an output may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter may be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property members have not-null values.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with a field or property member.
            </summary>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property
            members have not-null values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes the attribute with the specified return value condition and list of field and property members.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
            Specifies that an output will not be null even if the corresponding type allows it.
            Specifies that an input argument was not null when the call returns.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
            Specifies that the output will be non-null if the named parameter is non-null.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">The associated parameter name. The output will be non-null if the argument to the parameter specified is non-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
            Gets the associated parameter name.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute">
            <summary>
            An attribute that allows parameters to receive the expression of other parameters.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute"/> class.
            </summary>
            <param name="parameterName">The condition parameter value.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.ParameterName">
            <summary>
            Gets the parameter name the expression is retrieved from.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CollectionBuilderAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initialize the attribute to refer to the <paramref name="methodName"/> method on the <paramref name="builderType"/> type.
            </summary>
            <param name="builderType">The type of the builder to use to construct the collection.</param>
            <param name="methodName">The name of the method on the builder to use to construct the collection.</param>
            <remarks>
            <paramref name="methodName"/> must refer to a static method that accepts a single parameter of
            type <see cref="T:System.ReadOnlySpan`1"/> and returns an instance of the collection being built containing
            a copy of the data from that span.  In future releases of .NET, additional patterns may be supported.
            </remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.BuilderType">
            <summary>
            Gets the type of the builder to use to construct the collection.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.MethodName">
            <summary>
            Gets the name of the method on the builder to use to construct the collection.
            </summary>
            <remarks>
            This should match the metadata name of the target method.
            For example, this might be ".ctor" if targeting the type's constructor.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ModuleInitializerAttribute">
             <summary>
             Used to indicate to the compiler that a method should be called
             in its containing module's initializer.
             </summary>
             <remarks>
             When one or more valid methods
             with this attribute are found in a compilation, the compiler will
             emit a module initializer which calls each of the attributed methods.
            
             Certain requirements are imposed on any method targeted with this attribute:
             - The method must be `static`.
             - The method must be an ordinary member method, as opposed to a property accessor, constructor, local function, etc.
             - The method must be parameterless.
             - The method must return `void`.
             - The method must not be generic or be contained in a generic type.
             - The method's effective accessibility must be `internal` or `public`.
            
             The specification for module initializers in the .NET runtime can be found here:
             https://github.com/dotnet/runtime/blob/main/docs/design/specs/Ecma-335-Augments.md#module-initializer
             </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute">
            <summary>
            Specifies the priority of a member in overload resolution. When unspecified, the default priority is 0.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute"/> class.
            </summary>
            <param name="priority">The priority of the attributed member. Higher numbers are prioritized, lower numbers are deprioritized. 0 is the default if no attribute is present.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.Priority">
            <summary>
            The priority of the member.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ParamCollectionAttribute">
            <summary>
            Indicates that a method will allow a variable number of arguments in its invocation.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiresLocationAttribute">
            <summary>
            Reserved for use by a compiler for tracking metadata.
            This attribute should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.SkipLocalsInitAttribute">
            <summary>
            Used to indicate to the compiler that the <c>.locals init</c> flag should not be set in method headers.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
